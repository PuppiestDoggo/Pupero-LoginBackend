from pydantic import BaseModel, EmailStr
from typing import Optional

# Register
class UserRegister(BaseModel):
    email: EmailStr
    username: str
    password: str

# Login
class UserLogin(BaseModel):
    username: Optional[str] = None
    email: Optional[EmailStr] = None
    password: str
    totp: Optional[str] = None
    remember_me: Optional[bool] = False

# Token
class Token(BaseModel):
    access_token: str
    refresh_token: str
    token_type: str = "bearer"

# Refresh
class TokenRefresh(BaseModel):
    refresh_token: str

# Password Reset Request
class PasswordResetRequest(BaseModel):
    email: EmailStr

# User Profile
class UserProfile(BaseModel):
    email: EmailStr
    username: Optional[str] = None
    role: str
    phrase: str

# Update User
class UserUpdate(BaseModel):
    phrase: Optional[str] = None
    username: Optional[str] = None
    new_email: Optional[EmailStr] = None
    current_password: Optional[str] = None
    new_password: Optional[str] = None

# TOTP Enable
class TOTPEnableResponse(BaseModel):
    secret: str
    qr_code: str  # Base64 encoded QR image

class TOTPEnableConfirm(BaseModel):
    secret: str
    code: str  # 2FA code generated by the authenticator app

# Delete Account
class DeleteAccountRequest(BaseModel):
    current_password: str
    totp: Optional[str] = None
    confirm: bool = False
